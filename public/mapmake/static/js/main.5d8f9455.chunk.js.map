{"version":3,"sources":["components/Tilebar/Tilebar.js","components/Toolbar/Toolbar.js","components/Canvas/Canvas.js","components/Select/Select.js","img/logo.png","components/Auth/Auth.js","components/App/App.js","util/firebaseConfig.js","reportWebVitals.js","index.js"],"names":["Tilebar","props","index","file","a","firebase","storage","ref","map","put","then","snapshot","getDownloadURL","url","dataCollection","doc","update","className","tileIndex","onClick","setTileIndex","clearTiles","tiles","tile","i","type","src","alt","htmlFor","id","accept","onChange","e","uploadTileImage","target","files","required","Toolbar","canvas","ctx","lastX","lastY","useState","error","setError","mapName","setMapName","member","setMember","usernamesRef","firestore","collection","useCollectionData","usernamesData","mapDoc","useDocumentData","mapData","uid","auth","currentUser","userDoc","newMapName","name","newMember","matches","filter","user","username","length","setTimeout","memberUid","users","FieldValue","arrayUnion","checked","fill","setFill","downloadPNG","downloadJSON","uploadJSON","canvasSize","min","max","step","defaultValue","updateCanvasSize","value","gridSize","Math","round","log","updateGridSize","trigger","onOpen","modal","close","onSubmit","preventDefault","updateMap","placeholder","style","marginTop","addMember","margin","color","u","userId","getUsername","join","exitMap","canvasPixels","gridPixels","drawing","isFill","tileData","repeat","Canvas","setCanvasSize","gridSizeHook","setGridSizeHook","loaded","setLoaded","undefined","setTiles","imagesDoc","imagesData","canvasRef","useRef","setTileData","char","toString","slice","getImage","Promise","resolve","reject","image","Image","onload","onerror","crossOrigin","tileImages","tileURL","tileImage","push","clearTile","x","y","fillStyle","fillRect","loadTiles","loadAll","mapTiles","newGridSize","sqrt","mapTile","parseInt","drawImage","fillTile","replaceType","fillX","fillY","floor","sketch","mode","mouseX","clientX","offsetLeft","window","scrollX","mouseY","clientY","offsetTop","scrollY","gridX","gridY","clickedTile","endSketch","confirm","clearData","scaleDown2D","str","side","factor","out","scaleUp2D","sizePower","pow","gridGrid","tileSide","keyDown","kc","keyCode","useEffect","current","getContext","imageSmoothingEnabled","document","addEventListener","removeEventListener","loadImages","toBlob","blob","URL","createObjectURL","link","createElement","download","href","click","indexes","tilesJson","dataStr","encodeURIComponent","JSON","stringify","reader","FileReader","readAsText","text","result","json","parse","newTileData","pixels","width","height","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","display","Select","mapsRef","mapsQuery","where","orderBy","idField","maps","userData","add","set","tile0","tile1","tile2","tile3","tile4","tile5","tile6","tile7","tile8","tile9","some","checkUserMap","m","selectMap","signOut","Auth","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setUsername","signingUp","setSigningUp","signInWithEmailAndPassword","code","message","test","toLowerCase","createUserWithEmailAndPassword","registered","Date","logo","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","useAuthState","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5d8f9455.chunk.js","sourcesContent":["import LayersClearIcon from '@material-ui/icons/LayersClear';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport firebase from 'firebase/app';\n\nimport './Tilebar.css';\n\nfunction Tilebar(props) {\n  async function uploadTileImage(index, file) {\n    if (!file) return;\n    // put file into storage\n    await firebase.storage().ref(`${props.map}/tile${index}`).put(file).then(snapshot => {\n      // update tile url in firestore\n      snapshot.ref.getDownloadURL().then(url => {\n        const imagesRef = props.dataCollection.doc('images');\n        imagesRef.update({\n          [`tile${index}`]: url\n        });\n      });\n    });\n  }\n\n  return (\n    <div className=\"Tilebar\">\n      <div className=\"tile-select\">\n        <div className=\"tile-display\">\n          <button\n            className={props.tileIndex === -1 ? 'tile-btn selected' : 'tile-btn'}\n            onClick={() => props.setTileIndex(-1)}\n          >\n            <LayersClearIcon />\n          </button>\n          <button className=\"delete-btn\" onClick={props.clearTiles}>\n            <DeleteIcon />\n          </button>\n        </div>\n        {\n          props.tiles &&\n          props.tiles.map((tile, i) =>\n            <div className=\"tile-display\" key={`tileform-${i}`}>\n              <button\n                type=\"button\"\n                className={props.tileIndex === i ? 'tile-btn selected' : 'tile-btn'}\n                onClick={() => props.setTileIndex(i)}\n              >\n                {\n                  tile ?\n                  <img src={tile.src} alt=\"\" /> :\n                  <ClearIcon />\n                }\n              </button>\n              <label htmlFor={`tileinput-${i}`}>\n                <PublishIcon />\n              </label>\n              <input\n                id={`tileinput-${i}`}\n                type=\"file\"\n                accept=\"image/*\"\n                className=\"file-input\"\n                onChange={e => uploadTileImage(i, e.target.files[0])}\n                required\n              />\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Tilebar;\n","import React, { useState } from 'react';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ImageIcon from '@material-ui/icons/Image';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\n\nimport Popup from 'reactjs-popup';\n\nimport { useCollectionData, useDocumentData } from 'react-firebase-hooks/firestore';\n\nimport firebase from 'firebase/app';\n\nimport './Toolbar.css';\n\nfunction Toolbar(props) {\n  const [error, setError] = useState('');\n  const [mapName, setMapName] = useState('');\n  const [member, setMember] = useState('');\n\n  const usernamesRef = firebase.firestore().collection('usernames');\n  const [usernamesData] = useCollectionData(usernamesRef);\n\n  const mapDoc = firebase.firestore().collection('maps').doc(props.map);\n  const [mapData] = useDocumentData(mapDoc);\n\n  // sets user current map to empty\n  async function exitMap() {\n    const uid = firebase.auth().currentUser.uid;\n    const userDoc = firebase.firestore().collection('users').doc(uid);\n    await userDoc.update({\n      map: ''\n    });\n  }\n\n  // updates current map\n  async function updateMap() {\n    const newMapName = mapName;\n    setMapName('');\n    await mapDoc.update({\n      name: newMapName\n    });\n  }\n\n  // adds member to current map\n  async function addMember() {\n    const newMember = member;\n    setMember('');\n    // retrieve new member uid\n    const matches = usernamesData.filter(user => user.username === newMember);\n    if (matches.length === 0) {\n      setError(`No user @${newMember} found`)\n      setTimeout(() => setError(''), 2000);\n      return;\n    }\n    const memberUid = matches[0].uid;\n    // update document in firebase\n    await mapDoc.update({\n      users: firebase.firestore.FieldValue.arrayUnion(memberUid)\n    });\n  }\n\n  // returns username for user with given uid\n  function getUsername(userId) {\n    if (!usernamesData) return null;\n    const matches = usernamesData.filter(user => user.uid === userId);\n    return matches.length === 0 ? null : matches[0].username;\n  }\n\n  return (\n    <div className=\"Toolbar\">\n      <div className=\"container\">\n        <FormatColorFillIcon />\n        <input\n          checked={props.fill}\n          onChange={e => props.setFill(e.target.checked)}\n          type=\"checkbox\"\n        />\n      </div>\n      <div className=\"container\">\n        <ImageIcon />\n        <button onClick={props.downloadPNG}>\n          <GetAppIcon />\n        </button>\n      </div>\n      <div className=\"container\">\n        <DescriptionIcon />\n        <button onClick={props.downloadJSON}>\n          <GetAppIcon />\n        </button>\n      </div>\n      <div className=\"container\">\n        <DescriptionIcon />\n        <label htmlFor=\"json-input\">\n          <PublishIcon />\n        </label>\n        <input\n          id=\"json-input\"\n          className=\"file-input\"\n          type=\"file\"\n          accept=\"application/json\"\n          onChange={e => props.uploadJSON(e.target.files[0])}\n        />\n      </div>\n      <div className=\"container\">\n        <p>{props.canvasSize}&times;{props.canvasSize} pixels</p>\n        <input\n          type=\"range\"\n          min=\"128\"\n          max=\"1024\"\n          step=\"128\"\n          defaultValue=\"512\"\n          onChange={e => props.updateCanvasSize(e.target.value)}\n        />\n      </div>\n      <div className=\"container\">\n        <p>{props.gridSize}&times;{props.gridSize} tiles</p>\n        <input\n          type=\"range\"\n          min=\"4\"\n          max=\"8\"\n          step=\"1\"\n          value={Math.round(Math.log(props.gridSize) / Math.log(2))}\n          onChange={e => props.updateGridSize(e.target.value)}\n        />\n      </div>\n      <Popup\n        trigger={\n          <button className=\"editmap-btn\">\n            <EditIcon />\n          </button>\n        }\n        onOpen={() => {\n          if (mapData) setMapName(mapData.name);\n        }}\n        modal\n      >\n        {\n          close => (\n            <div className=\"modal\">\n              <button className=\"close\" onClick={close}>&times;</button>\n              <h1>Editing {mapData ? mapData.name : '...'}</h1>\n              <form\n                onSubmit={e => {\n                  e.preventDefault();\n                  updateMap();\n                  close();\n                }}\n              >\n                <input\n                  placeholder=\"map name\"\n                  value={mapName}\n                  onChange={e => setMapName(e.target.value)}\n                  required\n                />\n                <button>Update Map</button>\n              </form>\n              <form style={{marginTop: '5px'}} onSubmit={e => {\n                e.preventDefault();\n                addMember();\n              }}>\n                <input\n                  placeholder=\"username\"\n                  value={member}\n                  onChange={e => setMember(e.target.value)}\n                  required\n                />\n                <button>Add Member</button>\n              </form>\n              {error && <p style={{margin: '10px 0 0 0', color: 'red'}}>{error}</p>}\n              <p style={{margin: '10px 0'}}><u>Members</u></p>\n              {\n                mapData &&\n                <p style={{margin: '0'}}>\n                  {mapData.users.map(u => getUsername(u)).join(', ')}\n                </p>\n              }\n            </div>\n          )\n        }\n      </Popup>\n      <button onClick={() => exitMap()}>\n        <ExitToAppIcon />\n      </button>\n    </div>\n  );\n}\n\nexport default Toolbar;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport Tilebar from '../Tilebar/Tilebar.js';\nimport Toolbar from '../Toolbar/Toolbar.js';\n\nimport firebase from 'firebase/app';\nimport { useDocumentData } from 'react-firebase-hooks/firestore';\n\nimport './Canvas.css';\n\n// canvas reference\nlet canvas;\nlet ctx;\n\n// canvas pixel dimensions\nlet gridSize = 32;\nlet canvasPixels = 512;\nlet gridPixels = canvasPixels / gridSize;\n\nlet drawing = false;\nlet lastX, lastY;\nconst tileCount = 10;\nlet isFill = false;\n\n// initialize tile data as empty\nlet tileData = '-'.repeat(gridSize * gridSize);\n\nfunction Canvas(props) {\n  const [canvasSize, setCanvasSize] = useState(canvasPixels);\n  const [gridSizeHook, setGridSizeHook] = useState(gridSize);\n\n  const [loaded, setLoaded] = useState(false);\n  const [fill, setFill] = useState(false);\n  const [tileIndex, setTileIndex] = useState(-1);\n  const [tiles, setTiles] = useState(undefined);\n\n  const dataCollection = firebase.firestore().collection('maps').doc(props.map).collection('data');\n  const imagesDoc = dataCollection.doc('images');\n  const [imagesData] = useDocumentData(imagesDoc);\n  const mapDoc = dataCollection.doc('map');\n  const [mapData] = useDocumentData(mapDoc);\n\n  const canvasRef = useRef();\n\n  // updates tile data at index to given tile\n  function setTileData(index, tile) {\n    const char = tile < 0 ? '-' : tile.toString();\n    tileData = tileData.slice(0, index) + char + tileData.slice(index + 1);\n  }\n\n  // returns an image as a promise\n  function getImage(url) {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.onload = () => resolve(image);\n      image.onerror = reject;\n      image.crossOrigin = 'anonymous';\n      image.src = url;\n    });\n  }\n\n  // loads tile images\n  async function loadImages() {\n    const tileImages = [];\n    for (let i = 0; i < tileCount; i++) {\n      const tileURL = imagesData[`tile${i}`];\n      // if tile exists, push image with url source\n      if (tileURL) {\n        const tileImage = await getImage(tileURL);\n        tileImages.push(tileImage);\n      // if tile does not exist, push null\n      } else tileImages.push(null);\n    }\n    setTiles(tileImages);\n  }\n\n  // clears tile at given x, y grid coordinates\n  function clearTile(x, y) {\n    ctx.fillStyle = '#ddd';\n    ctx.fillRect(x * gridPixels, y * gridPixels, gridPixels, gridPixels);\n    ctx.fillStyle = '#fff';\n    ctx.fillRect(x * gridPixels + 0.5, y * gridPixels + 0.5, gridPixels - 1, gridPixels - 1);\n  }\n\n  // loads tiles\n  function loadTiles(loadAll) {\n    const mapTiles = mapData.tiles;\n    // if map size different, adjust local grid size\n    if (mapTiles.length !== tileData.length) {\n      const newGridSize = Math.round(Math.sqrt(mapTiles.length));\n      gridSize = newGridSize;\n      gridPixels = canvasPixels / newGridSize;\n      tileData = '-'.repeat(mapTiles.length);\n      setGridSizeHook(newGridSize);\n      return;\n    }\n    // for each tile on canvas\n    for (let x = 0; x < gridSize; x++) {\n      for (let y = 0; y < gridSize; y++) {\n        const i = y * gridSize + x;\n        // if tile data does not match map data\n        const mapTile = mapTiles[i];\n        if (loadAll || tileData[i] !== mapTile) {\n          // load image\n          if (mapTile === '-') clearTile(x, y);\n          else {\n            const index = parseInt(mapTile);\n            if (tiles[index]) {\n              ctx.drawImage(tiles[index], x * gridPixels, y * gridPixels, gridPixels, gridPixels);\n            }\n          }\n        }\n      }\n    }\n    // update tile data\n    tileData = mapTiles;\n    setLoaded(true);\n  }\n\n  // recursive flood fill\n  function fillTile(index, replaceType) {\n    // return if not correct replace type\n    if (tileData[index] !== replaceType) return;\n    // fill tile\n    const fillX = index % gridSize;\n    const fillY = Math.floor(index / gridSize);\n    if (tileIndex === -1) clearTile(fillX, fillY);\n    else ctx.drawImage(tiles[tileIndex], fillX * gridPixels, fillY * gridPixels, gridPixels, gridPixels);\n    setTileData(index, tileIndex);\n    // recurse on surrounding tiles\n    if (index - gridSize > 0) fillTile(index - gridSize, replaceType); // above\n    if (index + gridSize < tileData.length) fillTile(index + gridSize, replaceType); // below\n    if (index % gridSize !== gridSize - 1) fillTile(index + 1, replaceType); // right\n    if (index % gridSize !== 0) fillTile(index - 1, replaceType); // left\n  }\n\n  // sketches tiles to the canvas\n  async function sketch(mode, e) {\n    // start drawing if mouse down\n    if (mode === 'down') drawing = true;\n    // if mouse moving\n    else if (mode === 'move') {\n      // return if not drawing or filling\n       if (!drawing || fill) return;\n    }\n\n    // get current mouse position\n    let mouseX = e.clientX - canvas.offsetLeft + window.scrollX;\n    let mouseY = e.clientY - canvas.offsetTop + window.scrollY;\n\n    // round mouse position to nearest gridpoint\n    const gridX = Math.floor(mouseX / gridPixels);\n    const gridY = Math.floor(mouseY / gridPixels);\n\n    // if moving and same grid square as last, return\n    if (mode === 'move' && gridX === lastX && gridY === lastY) return;\n\n    // if filling, start fill\n    if (fill) {\n      const index = gridY * gridSize + gridX;\n      const clickedTile = tileData[index];\n      // if selected tile same as clicked, return\n      if (tileIndex === clickedTile) return;\n      fillTile(index, clickedTile);\n      return;\n    }\n\n    // update last position\n    lastX = gridX;\n    lastY = gridY;\n\n    // clear tile\n    if (tileIndex === -1) clearTile(gridX, gridY);\n    // draw if tile exists\n    else if (tiles[tileIndex]) {\n      ctx.drawImage(tiles[tileIndex], gridX * gridPixels, gridY * gridPixels, gridPixels, gridPixels);\n      // update tile data\n      const index = gridY * gridSize + gridX;\n      setTileData(index, tileIndex);\n    }\n  }\n\n  // called after sketch ends\n  async function endSketch() {\n    drawing = false;\n    // update tile data in firebase\n    await mapDoc.update({\n      tiles: tileData\n    });\n  }\n\n  // clears all tiles on screen\n  async function clearTiles() {\n    // confirm clear\n    if (!window.confirm('Clear all tiles?')) return;\n    // update tile data in firebase\n    const clearData = '-'.repeat(gridSize * gridSize);\n    await mapDoc.update({\n      tiles: clearData\n    });\n  }\n\n  // downloads canvas as a png\n  function downloadPNG() {\n    // get object url\n    canvas.toBlob(blob => {\n      const url = URL.createObjectURL(blob);\n      // download from link element\n      const link = document.createElement('a');\n      link.download = 'map.png';\n      link.href = url;\n      link.click();\n    })\n  }\n\n  // downloads canvas as a JSON\n  function downloadJSON() {\n    // construct tiles json data string\n    const indexes = [];\n    for (let char of mapData.tiles) {\n      if (char === '-') indexes.push(-1);\n      else indexes.push(parseInt(char));\n    }\n    const tilesJson = { tiles: indexes };\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(tilesJson));\n    // download from link element\n    const link = document.createElement('a');\n    link.download = 'map.json';\n    link.href = dataStr;\n    link.click();\n  }\n\n  // uploads given json as map data\n  function uploadJSON(file) {\n    // read file as text\n    const reader = new FileReader();\n    reader.readAsText(file);\n    // when reader loads file\n    reader.onload = e => {\n      // parse as json\n      const text = e.target.result;\n      const json = JSON.parse(text);\n      // if valid json\n      if (json && json.tiles) {\n        // read tile data\n        let newTileData = '';\n        for (const index of json.tiles) {\n          if (index === -1) newTileData += '-';\n          else newTileData += index.toString();\n        }\n        // update tile data in firebase\n        mapDoc.update({\n          tiles: newTileData\n        });\n      }\n    }\n  }\n\n  // updates canvas to match given size\n  function updateCanvasSize(pixels) {\n    canvasPixels = pixels;\n    gridPixels = canvasPixels / gridSize;\n    setCanvasSize(canvasPixels);\n  }\n\n  // scales down a string representing 2d space\n  function scaleDown2D(str, side, factor) {\n    let out = '';\n    for (let x = 0; x < side; x += factor) {\n      for (let y = 0; y < side; y += factor) {\n        const i = x * side + y;\n        out += str[i];\n      }\n    }\n    return out;\n  }\n\n  // scales up a string representing 2d space\n  function scaleUp2D(str, side, factor) {\n    let out = '';\n    for (let x = 0; x < side * factor; x++) {\n      for (let y = 0; y < side * factor; y++) {\n        const x2 = Math.floor(x / factor);\n        const y2 = Math.floor(y / factor);\n        const i = x2 * side + y2;\n        out += str[i];\n      }\n    }\n    return out;\n  }\n\n  // updates tile grid to match given size\n  async function updateGridSize(sizePower) {\n    // confirm switch\n    if (!window.confirm('Update grid size?')) return;\n\n    // update canvas dimensions\n    gridSize = Math.pow(2, sizePower);\n    gridPixels = canvasPixels / gridSize;\n\n    // update tile data\n    const gridGrid = gridSize * gridSize;\n    const tileSide = Math.round(Math.sqrt(tileData.length));\n    if (tileData.length !== gridGrid) {\n      // scale tile data up\n      if (tileData.length < gridGrid) {\n        const factor = gridSize / tileSide;\n        tileData = scaleUp2D(tileData, tileSide, factor);\n      // scale tile data down\n      } else {\n        const factor = tileSide / gridSize;\n        tileData = scaleDown2D(tileData, tileSide, factor);\n      }\n    }\n    await mapDoc.update({\n      tiles: tileData\n    });\n\n    setGridSizeHook(gridSize);\n  }\n\n  function keyDown(e) {\n    const kc = e.keyCode;\n    if (kc === 189 || kc === 192) setTileIndex(-1);\n    else if (kc === 48) setTileIndex(9);\n    else if (kc > 48 && kc < 58) setTileIndex(kc - 49);\n    else if (kc === 70) setFill(!isFill);\n  }\n\n  // on start\n  useEffect(() => {\n    // get canvas and context\n    canvas = canvasRef.current;\n    ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = false;\n    // add keydown listener\n    document.addEventListener('keydown', keyDown);\n    return () => document.removeEventListener('keydown', keyDown);\n  }, []);\n\n  useEffect(() => isFill = fill, [fill]);\n\n  // load tile images when image data changes\n  useEffect(() => {\n    if (imagesData) loadImages();\n  }, [imagesData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // load tiles when map data changes\n  useEffect(() => {\n    if (mapData && tiles) loadTiles(false);\n  }, [mapData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // reload all tiles when images or canvas dimensions update\n  useEffect(() => {\n    if (tiles) loadTiles(true);\n  }, [tiles, canvasSize, gridSizeHook]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"Canvas\">\n      {!loaded && <p className=\"loading-text\">Loading canvas...</p>}\n      {\n        loaded &&\n        <Toolbar\n          map={props.map}\n          fill={fill}\n          setFill={setFill}\n          downloadPNG={downloadPNG}\n          downloadJSON={downloadJSON}\n          uploadJSON={uploadJSON}\n          canvasSize={canvasSize}\n          updateCanvasSize={updateCanvasSize}\n          gridSize={gridSizeHook}\n          updateGridSize={updateGridSize}\n        />\n      }\n      <canvas\n        ref={canvasRef}\n        width={canvasSize}\n        height={canvasSize}\n        onMouseDown={e => sketch('down', e)}\n        onMouseMove={e => sketch('move', e)}\n        onMouseUp={e => endSketch()}\n        onMouseLeave={e => endSketch()}\n        style={{display: loaded ? 'inline' : 'none'}}\n      />\n      {\n        loaded &&\n        <Tilebar\n          map={props.map}\n          dataCollection={dataCollection}\n          tiles={tiles}\n          tileIndex={tileIndex}\n          setTileIndex={setTileIndex}\n          clearTiles={clearTiles}\n        />\n      }\n    </div>\n  );\n}\n\nexport default Canvas;\n","import React, { useEffect, useState } from 'react';\n\nimport Canvas from '../Canvas/Canvas.js';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport firebase from 'firebase/app';\n\nimport { useCollectionData, useDocumentData } from 'react-firebase-hooks/firestore';\n\nimport './Select.css';\n\nfunction Select() {\n  const [mapName, setMapName] = useState('');\n\n  const uid = firebase.auth().currentUser.uid;\n  const mapsRef = firebase.firestore().collection('maps');\n  const mapsQuery = mapsRef.where('users', 'array-contains', uid).orderBy('name');\n  const [maps] = useCollectionData(mapsQuery, { idField: 'id' });\n\n  const usersRef = firebase.firestore().collection('users');\n  const userDoc = usersRef.doc(uid);\n  const [userData] = useDocumentData(userDoc);\n\n  async function selectMap(map) {\n    await userDoc.update({\n      map: map.id\n    });\n  }\n\n  async function createMap(e) {\n    e.preventDefault();\n    await mapsRef.add({\n      name: mapName,\n      users: [uid]\n    }).then(doc => {\n      const dataCollection = doc.collection('data');\n      dataCollection.doc('map').set({\n        tiles: '-'.repeat(32 * 32)\n      });\n      dataCollection.doc('images').set({\n        tile0: '',\n        tile1: '',\n        tile2: '',\n        tile3: '',\n        tile4: '',\n        tile5: '',\n        tile6: '',\n        tile7: '',\n        tile8: '',\n        tile9: ''\n      });\n      userDoc.update({\n        map: doc.id\n      });\n    });\n  }\n\n  async function checkUserMap() {\n    // if user map invalid, set to none\n    if (userData.map && !maps.some(map => map.id === userData.map)) {\n      await userDoc.update({\n        map: ''\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (userData) checkUserMap();\n  }, [userData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (!userData) return <p className=\"loading-text\">Loading maps...</p>;\n  if (userData.map) return <Canvas map={userData.map} />;\n  if (!maps) return <p className=\"loading-text\">Loading maps...</p>;\n\n  return (\n    <div className=\"Select\">\n      <h1>Select Map</h1>\n      <hr />\n      {\n        maps.map((m, i) =>\n          <button\n            key={`selectmap-${i}`}\n            onClick={() => selectMap(m)}\n            className=\"select-btn clean-btn\"\n          >\n            {m.name}\n          </button>\n        )\n      }\n      <hr />\n      <form onSubmit={createMap}>\n        <input\n          placeholder=\"map name\"\n          value={mapName}\n          onChange={e => setMapName(e.target.value)}\n          required\n        />\n        <button className=\"clean-btn\">Create Map</button>\n      </form>\n      <hr />\n      <button\n        className=\"signout-btn clean-btn\"\n        onClick={() => firebase.auth().signOut()}\n      >\n        <ExitToAppIcon />\n      </button>\n    </div>\n  );\n}\n\nexport default Select;\n","export default __webpack_public_path__ + \"static/media/logo.e6b36c6a.png\";","import React, { useState } from 'react';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport firebase from 'firebase/app';\n\nimport logo from '../../img/logo.png';\nimport './Auth.css';\n\nfunction Auth() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n  const [signingUp, setSigningUp] = useState(false);\n\n  const usernamesRef = firebase.firestore().collection('usernames');\n  const [usernamesData] = useCollectionData(usernamesRef);\n\n  // attempts to sign in user\n  async function signIn(e) {\n    e.preventDefault();\n    setError('');\n\n    // try to sign in with email and password\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n    // handle sign in error\n    } catch(e) {\n      if (e.code === 'auth/invalid-email') {\n        setError('Invalid email address.');\n      } else if (e.code === 'auth/user-not-found') {\n        setError('Unknown email address.');\n      } else if (e.code === 'auth/wrong-password') {\n        setError('Incorrect password. Please try again.');\n      } else if (e.code === 'auth/too-many-requests') {\n        setError('Too many sign in requests. Please try again later.')\n      } else if (e.code === 'auth/weak-password') {\n        setError('Password must be at least 6 characters.')\n      } else {\n        setError(e.message);\n      }\n    }\n  }\n\n  // attempts to sign up user\n  async function signUp(e) {\n    e.preventDefault();\n    setError('');\n\n    // verify password confirmation\n    if (password !== confirmPassword) {\n      setError(\"Passwords must match.\");\n      return;\n    }\n    // verify username chars\n    if (!/^[A-Za-z0-9_]+$/.test(username)) {\n      setError(\"Username can only contain alphanumeric characters and underscore.\");\n      return;\n    }\n    // verify username length\n    if (username.length < 2 || username.length > 16) {\n      setError(\"Username must be between 2 and 16 characters.\");\n      return;\n    }\n    // verify username availability\n    if (usernamesData.some(user => user.username.toLowerCase() === username.toLowerCase())) {\n      setError(\"Username taken. Please try another.\");\n      return;\n    }\n\n    // create user account\n    try {\n      await firebase.auth().createUserWithEmailAndPassword(email, password);\n    // fail create user\n    } catch(e) {\n      setError(e.code);\n      return;\n    };\n    // create user user documents\n    const uid = firebase.auth().currentUser.uid;\n    await firebase.firestore().collection('users').doc(uid).set({\n      username: username,\n      uid: uid,\n      registered: new Date(),\n      map: ''\n    });\n    await firebase.firestore().collection('usernames').doc(uid).set({\n      username: username,\n      uid: uid\n    });\n  }\n\n  return (\n    <div className=\"Auth\">\n      <div className=\"center-box\">\n        <img src={logo} alt=\"logo\" />\n        <h1>MapMake</h1>\n        <hr />\n        {\n          signingUp ?\n          <form onSubmit={signUp}>\n            <h2>Sign Up</h2>\n            <label htmlFor=\"signup-email\">Email</label>\n            <input\n              id=\"signup-email\"\n              placeholder=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              required\n            />\n            <label htmlFor=\"signup-username\">Username</label>\n            <input\n              placeholder=\"username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              required\n            />\n            <label htmlFor=\"signup-username\">Password</label>\n            <input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n            <input\n              style={{marginTop: '2px'}}\n              placeholder=\"confirm password\"\n              type=\"password\"\n              value={confirmPassword}\n              onChange={e => setConfirmPassword(e.target.value)}\n              required\n            />\n            <button className=\"clean-btn\" type=\"submit\">Sign Up</button>\n          </form> :\n          <form onSubmit={signIn}>\n            <h2>Sign In</h2>\n            <label htmlFor=\"signin-email\">Email</label>\n            <input\n              id=\"signin-email\"\n              placeholder=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              required\n            />\n            <label htmlFor=\"signin-password\">Password</label>\n            <input\n              id=\"signin-password\"\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n            <button className=\"clean-btn\" type=\"submit\">Sign In</button>\n          </form>\n        }\n        {error && <p className=\"error-text\">{error}</p>}\n        <hr />\n        {\n          signingUp ?\n          <button className=\"clean-btn\" onClick={() => {\n            setError('');\n            setSigningUp(false);\n          }}>Have an account? Sign in</button> :\n          <button className=\"clean-btn\" onClick={() => {\n            setError('');\n            setSigningUp(true);\n          }}>No account? Sign up</button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Auth;\n","import React, { useEffect, useState } from 'react';\n\nimport Select from '../Select/Select.js';\nimport Auth from '../Auth/Auth.js';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nimport { firebaseConfig } from '../../util/firebaseConfig.js';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nimport './App.css';\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  useAuthState(firebase.auth());\n\n  const [loaded, setLoaded] = useState(false);\n\n  // set loaded after auth initialization\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(() => {\n      setLoaded(true);\n    })\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {\n        !loaded ?\n        <p className=\"loading-text\">Loading auth...</p> :\n        firebase.auth().currentUser ?\n        <Select /> :\n        <Auth />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyBH0SssChHwgZLe_QTL9iO3otlHGyL_7TQ\",\n  authDomain: \"mapmake-app.firebaseapp.com\",\n  projectId: \"mapmake-app\",\n  storageBucket: \"mapmake-app.appspot.com\",\n  messagingSenderId: \"1060821530811\",\n  appId: \"1:1060821530811:web:5f6ade251bf59e23a4919e\"\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'reactjs-popup/dist/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}